<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://code.alibabatech.com/schema/dubbo
						http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
                     http://www.springframework.org/schema/security
                     http://www.springframework.org/schema/security/spring-security.xsd">


<!--    配置哪些资源不登陆也能访问-->
<!--    <security:http security="none" pattern="/pages/**"></security:http>-->
    <security:http security="none" pattern="/login.html"></security:http>
    <security:http security="none" pattern="/css/**"></security:http>
    <security:http security="none" pattern="/img/**"></security:http>
    <security:http security="none" pattern="/js/**"></security:http>
    <security:http security="none" pattern="/plugins/**"></security:http>
<!--    <security:http security="none" pattern="/pages/b.html"></security:http>-->

<!--    auto-config:自动配置，如果设置为true，自动应用一些默认配置，比如框架会提供一个默认登录页面-->
<!--    use-expressions:是否使用spring security提供的表达式来描述权限-->
   <security:http auto-config="true" use-expressions="true">

       <security:headers>
<!--           设置页面可以访问iframe访问受保护的页面-->
           <security:frame-options policy="SAMEORIGIN"></security:frame-options>
       </security:headers>
<!--       配置拦截规则，/**表示拦截所有请求-->
<!--       pattern:描述拦截规则-->
<!--       access:指定所需的访问角色或访问权限-->
<!--       <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"></security:intercept-url>-->
       <!--只要认证通过就可以访问-->
       <security:intercept-url pattern="/pages/**"  access="isAuthenticated()" />




       <!--    配置登陆表单，替换成自己指定的登录页面-->
<!--       login-page:指定登录页面-->
       <security:form-login
               login-page="/login.html"
                username-parameter="username"
               password-parameter="password"
               login-processing-url="/login.do"
               default-target-url="/pages/main.html"
               authentication-failure-url="/login.html"></security:form-login>


<!--       关闭csrf过滤器-->
       <security:csrf disabled="true"></security:csrf>

<!--       退出登录-->
       <security:logout logout-url="/logout.do" logout-success-url="/login.html" invalidate-session="true"/>
   </security:http>



    <!--    配置认证管理器-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="springSecurityUserService">
<!--            <security:user-service>-->
<!--&lt;!&ndash;                配置一个具体用户，后期需要从数据库查询&ndash;&gt;-->
<!--                <security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN"/>-->
<!--            </security:user-service>-->

<!--            指定对密码加密的对象-->
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>


    <!--    配置加密对象-->
    <bean id="passwordEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>


<!--    开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>