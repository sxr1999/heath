<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://code.alibabatech.com/schema/dubbo
						http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
                     http://www.springframework.org/schema/security
                     http://www.springframework.org/schema/security/spring-security.xsd">

<!--    auto-config:自动配置，如果设置为true，自动应用一些默认配置，比如框架会提供一个默认登录页面-->
<!--    use-expressions:是否使用spring security提供的表达式来描述权限-->
   <security:http auto-config="true" use-expressions="true">
<!--       配置拦截规则，/**表示拦截所有请求-->
<!--       pattern:描述拦截规则-->
<!--       access:指定所需的访问角色或访问权限-->
       <security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"></security:intercept-url>
   </security:http>

<!--    配置认证管理器-->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
<!--                配置一个具体用户，后期需要从数据库查询-->
                <security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>